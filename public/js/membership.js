// Generated by CoffeeScript 1.7.1
(function() {
  var g, listen;

  g = this;

  $(function() {
    $.get('/js/rates.json', function(data) {
      var price, rate;
      g.rates = data;
      price = 0.04;
      rate = g.rates.CAD.quadrigacx.rates.bid;
      g.amount = parseFloat(price / rate).toFixed(8);
      g.address = '15dRBzyg68NXRraGQVpa4MgbohyZEFH7sM';
      $('#payment_details').html("You can pay now by transferring " + g.amount + " BTC to:");
      $('#address').html(g.address);
      $('#qr').html('');
      return new QRCode('qr', {
        text: "bitcoin:" + g.address + "?amount=" + g.amount,
        width: 250,
        height: 250
      });
    });
    $('#register').submit(function(e) {
      e.preventDefault();
      return $('#modal').modal();
    });
    if (!g.blockchain) {
      return setTimeout(listen, 10000);
    }
  });

  listen = function() {
    if (!(g.blockchain && g.blockchain.readyState === 1)) {
      g.blockchain = new WebSocket("wss://ws.blockchain.info/inv");
      g.blockchain.onopen = function() {
        $('#connection').fadeIn().removeClass('glyphicon-exclamation-sign').addClass('glyphicon-signal');
        return g.blockchain.send('{"op":"addr_sub", "addr":"' + g.address + '"}');
      };
      g.blockchain.onerror = function(err) {
        $('#connection').addClass('glyphicon-exclamation-sign').removeClass('glyphicon-signal');
        return g.blockchain = null;
      };
      g.blockchain.onclose = function() {
        $('#connection').addClass('glyphicon-exclamation-sign').removeClass('glyphicon-signal');
        return g.blockchain = null;
      };
      return g.blockchain.onmessage = function(e) {
        var amount, results, txid;
        results = eval('(' + e.data + ')');
        amount = 0;
        txid = results.x.hash;
        $.each(results.x.out, function(i, v) {
          if (v.addr === g.address) {
            return amount += v.value / 100000000;
          }
        });
        if (amount >= g.amount) {
          $('#paid').show();
          return $('#register').unbind('submit').submit();
        }
      };
    }
  };

}).call(this);
